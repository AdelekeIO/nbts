--- services/completions.ts
+++ services/completions.ts
@@ -239,6 +239,7 @@
             kind: SymbolDisplay.getSymbolKind(typeChecker, symbol, location),
             kindModifiers: SymbolDisplay.getSymbolModifiers(symbol),
             sortText: "0",
+            type: typeChecker.typeToString(typeChecker.getTypeOfSymbolAtLocation(symbol, location)),
             source: getSourceFromOrigin(origin),
             hasAction: trueOrUndefined(!!origin && origin.type === "export"),
             isRecommended: trueOrUndefined(isRecommendedCompletionMatch(symbol, recommendedCompletion, typeChecker)),
--- services/goToDefinition.ts
+++ services/goToDefinition.ts
@@ -223,7 +223,7 @@
     /** Creates a DefinitionInfo from a Declaration, using the declaration's name if possible. */
     function createDefinitionInfo(declaration: Declaration, checker: TypeChecker, symbol: Symbol, node: Node): DefinitionInfo {
         const symbolName = checker.symbolToString(symbol); // Do not get scoped name, just the name of the symbol
-        const symbolKind = SymbolDisplay.getSymbolKind(checker, symbol, node);
+        const symbolKind = getNodeKind(declaration);
         const containerName = symbol.parent ? checker.symbolToString(symbol.parent, node) : "";
         return createDefinitionInfoFromName(declaration, symbolKind, symbolName, containerName);
     }
--- services/types.ts
+++ services/types.ts
@@ -794,6 +794,7 @@
         kind: ScriptElementKind;
         kindModifiers: string; // see ScriptElementKindModifier, comma separated
         sortText: string;
+        type?: string;
         insertText?: string;
         /**
          * An optional span that indicates the text to be replaced by this completion item.
