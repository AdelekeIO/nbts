--- services/completions.ts
+++ services/completions.ts
@@ -216,6 +216,7 @@
             kind: SymbolDisplay.getSymbolKind(typeChecker, symbol, location),
             kindModifiers: SymbolDisplay.getSymbolModifiers(symbol),
             sortText: "0",
+            type: typeChecker.typeToString(typeChecker.getTypeOfSymbolAtLocation(symbol, location)),
             source: getSourceFromOrigin(origin),
             hasAction: trueOrUndefined(!!origin && origin.type === "export"),
             isRecommended: trueOrUndefined(isRecommendedCompletionMatch(symbol, recommendedCompletion, typeChecker)),
--- services/goToDefinition.ts
+++ services/goToDefinition.ts
@@ -60,7 +60,9 @@
             const shorthandSymbolName = typeChecker.symbolToString(shorthandSymbol);
             const shorthandContainerName = typeChecker.symbolToString(symbol.parent, node);
             return map(shorthandDeclarations,
-                declaration => createDefinitionInfo(declaration, shorthandSymbolKind, shorthandSymbolName, shorthandContainerName));
+                // netbeanstypescript edit - node kind is more useful to distinguish the decls
+                //declaration => createDefinitionInfo(declaration, shorthandSymbolKind, shorthandSymbolName, shorthandContainerName));
+                declaration => createDefinitionInfo(declaration, getNodeKind(declaration), shorthandSymbolName, shorthandContainerName));
         }
 
         // If the node is the name of a BindingElement within an ObjectBindingPattern instead of just returning the
@@ -186,7 +188,8 @@
 
     function getDefinitionFromSymbol(typeChecker: TypeChecker, symbol: Symbol, node: Node): DefinitionInfo[] {
         const { symbolName, symbolKind, containerName } = getSymbolInfo(typeChecker, symbol, node);
-        return getConstructSignatureDefinition() || getCallSignatureDefinition() || map(symbol.declarations, declaration => createDefinitionInfo(declaration, symbolKind, symbolName, containerName));
+        // netbeanstypescript edit - node kind is more useful to distinguish the decls
+        return getConstructSignatureDefinition() || getCallSignatureDefinition() || map(symbol.declarations, declaration => createDefinitionInfo(declaration, getNodeKind(declaration), symbolName, containerName));
 
         function getConstructSignatureDefinition(): DefinitionInfo[] | undefined {
             // Applicable only if we are in a new expression, or we are on a constructor declaration
--- services/types.ts
+++ services/types.ts
@@ -740,6 +740,7 @@
         kind: ScriptElementKind;
         kindModifiers: string; // see ScriptElementKindModifier, comma separated
         sortText: string;
+        type?: string;
         insertText?: string;
         /**
          * An optional span that indicates the text to be replaced by this completion item.
